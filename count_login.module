<?php
/**
 * @file
 * Contains base function for module.
 */

 /**
 * Implements hook_menu().
 */
function count_login_menu() {
  $items = array();
  return $items;
}

/**
 * Returns user statistics.
 */
function count_login_get_stats($uid) {
  if (!is_numeric($uid)) {
    return;
  }
  if (!variable_get('count_login_count_logins', TRUE)) {
    $data = 'n/a';
  }
  elseif (count_login_isset($uid)) {
    $data = db_query(
      "SELECT value 
      FROM {count_login_values} 
      WHERE name = :name AND uid = :uid", array(
        ':name' => 'login_count',
        ':uid' => $uid)
      )
    ->fetchField();
  }
  else {
    return 0;
  }
}

/**
 * Implements hook_user_login().
 */
function count_login_user_login(&$edit, $account) {
  if (variable_get('count_login_count_logins', TRUE)) {
    count_login_login_count_update($account->uid);
  }
}

/**
 * Implements hook_views_api().
 *
 * Other Views hooks in user_stats.views.inc.
 */
function count_login_views_api() {
  return array(
    'api' => '2.0',
    'path' => drupal_get_path('module', 'count_login') . '/',
  );
}

/**
 * Checks whether a statistic is set for a given user.
 */
function count_login_isset($statistic, $uid) {
  $result = db_query("SELECT COUNT(*)
    FROM {count_login_values}
    WHERE uid = :uid AND name = :name",
    array(
      ':uid' => $uid,
      ':name' => $statistic)
    )
  ->fetchField();
  if ($result > 0) {
    return TRUE;
  }
  return FALSE;
}

/**
 * Manage the login count of a given user.
 */
function count_login_login_count_update($uid) {
  if (!is_numeric($uid)) {
    return;
  }
  if (count_login_isset('login_count', $uid)) {
    db_update('count_login_values')
      ->expression('value', 'value + :value', array(':value' => 1))
      ->condition('name', 'login_count')
      ->condition('uid', $uid)
      ->execute();
    }
    else {
      $id = db_insert('count_login_values')
        ->fields(array(
          'name' => 'login_count',
          'uid' => $uid,
          'value' => 1,
        ))
        ->execute();
    }
 }   